print("Work in progress")
local gui = Instance.new("ScreenGui")
gui.Name = "ExploitStyleGUI"
gui.ResetOnSpawn = false
gui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

local UserInputService = game:GetService("UserInputService")
local deviceType = UserInputService.TouchEnabled and "Mobile" or "PC"

-- Determine GUI scale and position based on device type
local frameSize = deviceType == "Mobile" and UDim2.new(0.8, 0, 0.9, 0) or UDim2.new(0.6, 0, 0.7, 0)

-- Main Frame (Draggable)
local main = Instance.new("Frame")
main.Size = frameSize
main.Position = UDim2.new((1 - frameSize.X.Scale) / 2, 0, (1 - frameSize.Y.Scale) / 2, 0)
main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
main.BorderSizePixel = 0
main.Active = true
main.Draggable = true
main.Visible = true
main.Parent = gui

-- UICorner for Main Frame
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0.05, 0)
uiCorner.Parent = main

-- Top Bar
local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1, 0, 0.1, 0)
topBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
topBar.BorderSizePixel = 0
topBar.Parent = main

-- Title Label
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(0.8, 0, 1, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Unstable"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Font = Enum.Font.Gotham
titleLabel.TextScaled = true
titleLabel.Parent = topBar

-- Destroy Button
local destroyButton = Instance.new("TextButton")
destroyButton.Size = UDim2.new(0.1, 0, 1, 0)
destroyButton.Position = UDim2.new(0.9, 0, 0, 0)
destroyButton.BackgroundTransparency = 1
destroyButton.Text = "X"
destroyButton.TextColor3 = Color3.fromRGB(255, 0, 0)
destroyButton.Font = Enum.Font.GothamBold
destroyButton.TextScaled = true
destroyButton.Parent = topBar

destroyButton.MouseButton1Click:Connect(function()
    gui:Destroy()
end)

-- Minimized Frame
local minimizedFrame = Instance.new("Frame")
minimizedFrame.Size = UDim2.new(0.06, 0, 0.145, 0) -- A perfect square
minimizedFrame.Position = UDim2.new(0.02, 0, 0.02, 0)
minimizedFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
minimizedFrame.BorderSizePixel = 0
minimizedFrame.Visible = false
minimizedFrame.Active = true
minimizedFrame.Parent = gui

local minimizedCorner = Instance.new("UICorner")
minimizedCorner.CornerRadius = UDim.new(0.2, 0)
minimizedCorner.Parent = minimizedFrame

-- Expand Button (TextButton)
local expandButton = Instance.new("TextButton")
expandButton.Size = UDim2.new(1, 0, 1, 0)
expandButton.BackgroundTransparency = 0
expandButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
expandButton.Font = Enum.Font.GothamBold
expandButton.RichText = true
expandButton.TextScaled = true
expandButton.Text = '<font color="rgb(0, 0, 255)">Un</font><font color="rgb(20, 20, 30)">sta</font><font color="rgb(255, 0, 0)">ble</font>'
expandButton.TextColor3 = Color3.fromRGB(255, 255, 255)
expandButton.Parent = minimizedFrame

-- Dragging Logic for Minimized Frame
local isDragging = false
local dragInput, dragStart, startPos

local function onInputBegan(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        isDragging = true
        dragStart = input.Position
        startPos = minimizedFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                isDragging = false
            end
        end)
    end
end

local function onInputChanged(input)
    if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        minimizedFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end

expandButton.InputBegan:Connect(onInputBegan)
expandButton.InputChanged:Connect(onInputChanged)
expandButton.MouseButton1Click:Connect(function()
    if isDragging then return end
    minimizedFrame.Visible = false
    main.Visible = true
    main.Position = main.Position -- Restore position from before minimization
    main:TweenSizeAndPosition(
        frameSize,
        main.Position,
        Enum.EasingDirection.Out,
        Enum.EasingStyle.Linear,
        0.3
    )
end)

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0.1, 0, 1, 0)
minimizeButton.Position = UDim2.new(0.8, 0, 0, 0)
minimizeButton.BackgroundTransparency = 1
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.TextScaled = true
minimizeButton.Parent = topBar

minimizeButton.MouseButton1Click:Connect(function()
    main:TweenSizeAndPosition(
        UDim2.new(0, 0, 0, 0),
        main.Position,
        Enum.EasingDirection.Out,
        Enum.EasingStyle.Linear,
        0.3,
        true,
        function()
            main.Visible = false
            minimizedFrame.Visible = true
        end
    )
end)
